<%= stylesheet_link_tag 'takeattendance', media: 'all', 'data-turbolinks-track' => true %>
<br>
<p id="auth"></p>
<p>To (646) 846-4373*</p>

<p>Time Remaining:</p>
<canvas id="myCanvas" width="275" height="275"></canvas>
<h3>*Standard Messaging Rates Apply</h3> 
<a class="btn-lg btn-default" href="<%= course_path(@course) %>">Back</a>

<script>

function getNewAuth(last)
{
var xmlhttp;
if (window.XMLHttpRequest)
  {// code for IE7+, Firefox, Chrome, Opera, Safari
  xmlhttp=new XMLHttpRequest();
  }
else
  {// code for IE6, IE5
  xmlhttp=new ActiveXObject("Microsoft.XMLHTTP");
  }
if (last)
  var resp = "newauth?last=true"
else
  var resp = "newauth?last=false"
xmlhttp.open("POST",resp,false);
xmlhttp.send();
document.getElementById("auth").innerHTML="TEXT " + xmlhttp.responseText;
}

//animation

(function () {
    var requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;
    window.requestAnimationFrame = requestAnimationFrame;
})();

var canvas = document.getElementById('myCanvas');
var context = canvas.getContext('2d');
var x = canvas.width / 2;
var y = canvas.height / 2;
var radius = 100;
var endPercent = 100;
var curPerc = 0;
var startPerc = 0;
var counterClockwise = true;
var circ = Math.PI * 2;
var quart = Math.PI / 2;

context.lineWidth = 60;
context.strokeStyle = '#FFFFFF';

function animate(current) {
    context.clearRect(0, 0, canvas.width, canvas.height);
    context.beginPath();
    context.arc(x, y, radius, -(quart), ((circ) * current) - quart, counterClockwise);
    context.stroke();
    curPerc++;
    
    if (curPerc == endPercent) {
        curPerc = startPerc;
		getNewAuth(false);
    }
        setTimeout(function () {
            requestAnimationFrame(function () {
                animate(curPerc / 100);});
        }, 300);

}
getNewAuth(false);
animate();

window.onbeforeunload = function(e) {
    e.preventDefault();
    getNewAuth(true);
}
</script>